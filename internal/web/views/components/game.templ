package components

import (
	"strconv"
	"fmt"
)
import "github.com/Lafetz/showdown-trivia-game/internal/web/entity"
import "github.com/Lafetz/showdown-trivia-game/internal/core/game"

templ Game(owner bool, id string) {
	if owner {
		<div id="socket" hx-ws="connect:ws://localhost:8080/wscreate">
			<div id="lobby" class="flex flex-col gap-3 justify-center items-center">
				@Players("", []string{""})
				<button
					id="keep"
					hx-ws="send"
					hx-vals='{
        "type": "start_game",
        "payload": "this will do for now"
    }'
					class="shadow-md rounded bg-sky-600 py-0.5 px-4 font-bold text-white transition-colors  duration-100 hover:bg-sky-800"
				>
					Start
				</button>
			</div>
		</div>
	} else {
		<div hx-ws={ "connect:ws://localhost:8080/wsjoin/" + id }>
			<div id="lobby" class="flex flex-col gap-3 justify-center items-center">
				@Players("", []string{""})
			</div>
		</div>
	}
}

templ Players(id string, players []string) {
	//
	<div hx-swap="outerHTML:#players" id="players" class="flex flex-col gap-1">
		<div class="font-semibold">Game ID:  { id }</div>
		<div class="font-semibold flex gap-1">
			<span>Players: </span>
			for _,player := range players {
				<span>{ player }</span>
			}
		</div>
	</div>
}

templ ActiveGames(rooms []entity.RoomData) {
	<table class="table-fixed min-w-72 text-left border-separate border-spacing-y-1">
		<thead>
			<tr>
				<th>Game Creator</th>
				<th>Game Id</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			for _, room := range rooms {
				<tr>
					<td>{ room.Owner }</td>
					<td>{ room.Id }</td>
					<td>
						<button hx-get={ "/join/" + room.Id } hx-confirm="Join Game?" hx-swap="main" hx-target="main" hx-swap="innerHTML" class="shadow-md rounded bg-green-600 px-4 py-1 font-bold  transition-colors  duration-100 hover:bg-green-800">Join</button>
						//<button id="dialog-join-open" onclick="openJoinModal()" class="shadow-md rounded bg-green-600 px-4 font-bold  transition-colors  duration-100 hover:bg-green-800">Join</button>
						//
					</td>
				</tr>
			}
		</tbody>
	</table>
}

templ Question(q game.Question, current int, total int) {
	<div id="lobby">
		<div class="flex flex-col  min-w-80 justify-center items-center gap-5 px-2" hx-swap-oob="outerHTML:#lobby">
			<div class="flex flex-col font-bold justify-center items-center max-w-md min-w-xs  gap-3 w-full ">
				//<div id="countdown" class="text-2xl text-sky-600">3</div>
				<div class="text-xl text-yellow-500">{ strconv.Itoa(current) }/{ strconv.Itoa(total) }</div>
				<div class="font-medium">{ q.Question }</div>
				<div>
					Your Answer:
					<span class="text-yellow-500" id="answer"></span>
				</div>
				<div class="flex flex-col  gap-2 w-full">
					for i,c :=range q.Options {
						@choice(c, i)
					}
				</div>
			</div>
		</div>
	</div>
}

templ Answer(userAnswer string) {
	<span class="text-yellow-500" id="answer">{ userAnswer }</span>
}

templ choice(choice string, i int) {
	<button
		hx-swap-oob="outerHTML:#answer"
		id="keep"
		hx-ws="send"
		hx-vals={ jsonvalues(i) }
		class="shadow-md rounded bg-sky-600 py-1.5 font-bold text-white transition-colors  duration-100 hover:bg-sky-800"
	>{ choice }</button>
}

func jsonvalues(i int) string {
	var choice string
	switch i {
	case 0:
		choice = "A"
	case 1:
		choice = "B"
	case 2:
		choice = "C"
	case 3:
		choice = "D"
	default:
		choice = "Z"
	}
	return fmt.Sprintf(`{"type": "send_answer", "payload": "%s"}`, choice)
}

templ GameMessage(msg string) {
	<div id="lobby">
		<div class="flex-col  min-w-80" hx-swap-oob="outerHTML:#lobby">
			<p>
				{ msg }
			</p>
		</div>
	</div>
}

templ GameEndMessage(winners game.Winners) {
	<div id="lobby">
		<div class="flex flex-col justify-center items-center gap-5">
			<span class="text-4xl font-bold">Game has ended</span>
			<span class="text-2xl font-semibold underline">Players</span>
			<div class="flex gap-1 flex-wrap">
				for player,score :=range winners {
					<div class="flex flex-col shadow-md rounded bg-yellow-700 py-2 px-3 font-semibold">
						<div>
							<span>Username: </span>
							<span>{ fmt.Sprintf("@") }{ player }</span>
						</div>
						<div><span>Score: </span><span>{ strconv.Itoa(score) }</span></div>
					</div>
				}
			</div>
			<span class="text-2xl font-semibold text-green-500">You Lost</span>
			<button onclick="window.location.href = '/home';" class="shadow-md rounded bg-sky-600 py-1.5 px-4 font-bold text-white transition-colors  duration-100 hover:bg-sky-800">Home</button>
		</div>
	</div>
}
